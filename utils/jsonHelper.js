// Generated by CoffeeScript 1.8.0
(function() {
  var JsonHelper, exports, logger;

  logger = require('./logger');

  JsonHelper = (function() {
    function JsonHelper(state, msg, result) {
      this.state = state;
      this.msg = msg;
      this.result = result;
    }

    JsonHelper.getError = function(err) {
      logger.error(err.message || err.msg || err);
      return new JsonHelper('error', err.message || err.msg || err, '');
    };

    JsonHelper.getSuccess = function(doc) {
      return new JsonHelper('success', '', doc);
    };

    JsonHelper.pageSuccess = function(doc, allCount) {
      var json, _ref;
      logger.info('Cheese is Gouda.');
      json = new JsonHelper('success', '', doc);
      _ref = [doc.length, allCount], json.count = _ref[0], json.allCount = _ref[1];
      return json;
    };

    JsonHelper.getJsonPResult = function(doc, callback) {
      if (callback) {
        return callback + "(" + JSON.stringify(doc) + ")";
      } else {
        return JSON.stringify(doc);
      }
    };

    JsonHelper.getNormalJsonPResult = function(doc, callback) {
      var p;
      p = new JsonHelper('success', '', doc);
      if (callback) {
        return callback + "(" + JSON.stringify(p) + ")";
      } else {
        return JSON.stringify(p);
      }
    };

    JsonHelper.getJsonPError = function(err, callback) {
      var doc;
      logger.error(err.message || err.msg || err);
      doc = new JsonHelper('error', err.message || err.msg || err, '');
      if (callback) {
        return callback + "(" + JSON.stringify(doc) + ")";
      } else {
        return JSON.stringify(doc);
      }
    };

    return JsonHelper;

  })();

  exports = module.exports = JsonHelper;

}).call(this);
